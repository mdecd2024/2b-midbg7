{"pages":[{"title":"41123205-W8","text":"錄開學至現在所做的進度 期中報告影片 路開學至現在所做的進度1.在about標題下新增各成員學號及倉儲和靜態網站鏈結。 2.錄製個人期中影片","tags":"w8","url":"./41123205-W8-blog.html"},{"title":"2024 Spring 課程 W8","text":"","tags":"w8","url":"./3320240411.html"},{"title":"41123230-W8拍攝個人影片","text":"完成影片 完成影片 上傳影片","tags":"w8","url":"./3020240411.html"},{"title":"41123230-W7清明連假暫停一次","text":"清明連假暫停一次 清明連假暫停一次 清明連假暫停一次","tags":"w7","url":"./3020240407.html"},{"title":"2024 Spring 課程 W7","text":"清明節 W1~W6統整 標題、內容整理統整","tags":"w7","url":"./3320240404.html"},{"title":"41123205-W7","text":"本週清明連假停課一次 本週清明連假 放假休息一週","tags":"w7","url":"./41123205-W7-blog.html"},{"title":"2024 Spring 課程 w6","text":"2024 Spring 協同產品設計實習課程教導, 分組網誌的統整、 Github Actions 帶有子模組的 main.yml 設定、更新分組倉儲中的分組倉儲 Github Actions 帶有子模組的 main.yml 設定 我們所寫的內容丟到個人倉儲, 加上我們有把自己的子模組倒入分組倉儲, 加入取子模組內容的 main.yml 設定把我們所寫的內容整合起來. 其中加入取子模組內容的設定為: 範例:2b-midbg4 cd_report.tex 中的範例報告第一章, 取自其組員分組網站中的 latex 目錄, 且圖片檔案也是沿用分組倉儲中的設定, 取自組員 images 目錄. 網誌的統整 如何把每個人的網誌整合到分組倉儲內, 整合前先把每個人子模組所連到的倉儲更新到現在狀態, 再利用 pelicanconf py 整合各組員的網誌. 更新分組倉儲中的分組倉儲 更新分組倉儲中的分組倉儲 cd2024 2b w6 取下子模組, 以及更新學員倉儲內容 先前我們有把每個人的倉儲利用子模組導入組別倉儲, 即使你自己的倉儲有更新內容, 也不會顯示目前更新次數, 如何讓子模組同步就利用 update 更新到最新版本. git submodule update --init cd 學號 git pull origin main cd .. git status git add . git commit -m \"update 學號 子模組\" git push 就完成更新目前的倉儲","tags":"w6","url":"./3320240328.html"},{"title":"2024 Spring 課程 w6","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引,說明協同 NX 零組件繪圖以及 CoppeliaSim 場景模擬相關檔案格式. ODOO PLM 論文中英並列任務 每個組員都需要在其個人的 cd2024 倉儲中以 LaTeX 格式完成下列文章的英文與中文翻譯,最後組員需要在分組網站的 Release 或 downloads 區域完成製作 2b-midbgx_report.pdf 若您想在本地環境中使用可攜式程式編譯分組 LaTeX 報告，請下載以下兩個檔案： 1. miktex-portable.7z （大小約 167MB，解壓縮後約 1GB，需要密碼） 2.參考資料： latex_images_github.7z （需要密碼） 這兩個檔案將提供您在本地編譯 LaTeX 文件所需的環境和資源。 CoppeliaSim 檔案格式 請下載 copsim_midterm_cube2_xml.7z 檔案。 1.CoppeliaSim 目前提供二進位與 XML 格式的場景檔案。XML 格式的場景檔案支援單一檔案或多個模型與影像檔案的儲存。 2.從 4.5.1 版本開始，設定資料不再存儲在套件目錄中，而是存放在操作系統的 AppData/Roaming 目錄中。 3.在 4.5.1 版本時，儲存為多 XML 檔案格式時，無法帶出場景中的 png 圖檔，此一問題在 4.6.0 版本之後才得到修正。 4.目前僅修改至 4.5.1 版本的 CoppeliaSim 支援 IPv4 與 IPv6 網際場景模擬。 5.XML 格式的檔案具有廣泛的應用，協同產品設計過程可能需要使用程式方法來處理從零組件與模擬場景互相轉換取得的 XML 格式檔案。 ODOO, NX, Sourcetree, Github and Replit 建立協同產品開發環境的配置需要以下步驟： 1.下載 Siemens NX1872 軟體。cd2024 學生可以選擇在電腦上安裝 NX1872 或者從隨身碟中運行 NX1872。 2.下載 Sourcetree_portable.7z 。這需要密碼才能解壓縮。 3.下載其他工具，包括 CoppeliaSim、SciTE、Portablegit、Putty、Zoomit、Python、Solvespace和Process Explorer等。 4.下載 Solvespace_model_2d_for_cd2024_w6.7z 。 配置重點在於將 NX、Sourcetree 和 CoppeliaSim 的設定檔案與管理分組倉儲的權限存儲至可攜系統。並且需要從可攜系統啟動後的命令列中啟動這些應用程式。","tags":"w6","url":"./2120240328.html"},{"title":"41123230-W6分組任務","text":"分組任務 完成並上傳上字幕任務 內容管理系統 使用者可以自行利用 cmsimde_site 倉儲作為 Template, 建立自己的網站內容管理系統. 引用網站網址連結的方法: cmsimde_site - 在文章中多次引用同一個網站連結時, 可以使用此種方法. https://github.com/mdecycu/cmsimde_site - 假如想要快速將網址套用 html 網站連結, 可以使用此種方法. cmsimde_site - 也可以使用 Markdown 的標準網站連結使用格式. # 引用 Python 程式的方法 for i in range(10): print(i, \"列出字串\") 也可以直接在 .md 檔案中使用 html 標註, 或加入 Javascript 或 Brython 程式碼. 從 1 累加到 100: 1 add to 100 將 iterable 與 iterator 相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. Filename: .py Run Output 清除輸出區 清除繪圖區 Reload 從 1 累加到 100 part2: 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block Filename: .py Run Output 清除輸出區 清除繪圖區 Reload","tags":"w6","url":"./3020240328.html"},{"title":"41123205-W6","text":"協同產品設計實習的第六週, 說明協同 NX 零組件繪圖以及 CoppeliaSim 場景模擬相關檔案格式. 教學影片上字幕 依照小組組長分配，各組員將自己所分配到之影片加上字幕和逐字稿，並上傳到個人與小組動態","tags":"w6","url":"./41123205-W6-blog.html"},{"title":"2024 Spring 課程 w5","text":"2024 Spring 協同產品設計實習課程教導, 教學內容為先前影片整理、分組網誌的統整. 影片整理 教學影片分組整理並自評: * 在影片上填上字幕, 另行上傳到可以嵌入到各分組的網站上 * 從影片字幕中整理出逐字稿, 放在影片下方, 以 .txt 連結安排 * 並在各嵌入的教學影片下方, 以摘要方式說明該影片的教學重點 * 需再加上自評 如何統整組員子模組中的協同設計網誌 每人每週的協同設計網誌文章放在個別的 cd2024 倉儲的 markdown 目錄中, 只要修改分組倉儲中的 pelicalconf.py, 使用 Pelican 設定中的 PATH 與 OUTPUT_PATH 變數, 指定網誌統整目錄, 就可以在分組倉儲中納入所有組員在子模組中所編寫的協同網誌. 實際的設定操作 pelicanconf_py.txt, 是利用 pelicanconf.py 中的程式設定段, 將子模組中 markdown 目錄的 .md 動態複製到分組倉儲中的 combined_directory, 並避開分組倉儲與學員子模組倉儲中的 pages 目錄下的 .md 檔案後, 再進行網誌轉檔, 並且所產生的網誌超文件將存入所設定的 blog 目錄. 完成設定後的網誌轉檔指令為: pelican -s local_publishconf.py 表利用 local_publishconf.py 的設定進行轉檔, 且先前有關 pelicanconf.py 的設定也將導入執行 過程中, 各組員必須將個別的網誌 .md 檔案名稱前加上字串(不然資料會亂), 例如: \"學號_\" 加上獨一無二的網誌 Slug 字串名稱, 且 Category 使用學號作為標示. 之後各組統整轉檔時, 才不至於發生相同網誌文章檔案名稱衝突的錯誤, 且從各分組網誌的 Categories 中即可找到各組員所編寫的所有網誌內容 利用 NX1872 協同繪製零組件 老師所提供 NX 套件目錄檔案, 之後將 NX1872 目錄存入隨身碟後, 可利用下列 start_USB_nx1872.bat 啟動. (電腦輔助設計室中 C: 安裝 NX1872, D: 則配置 NX2206 與 NX12)","tags":"w5","url":"./3320240321.html"},{"title":"2024 Spring 課程 w5","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引,教學內容為先前影片整理、分組網誌的統整. 影片整理 各組需要對教學影片進行整理並進行自我評估。具體步驟如下： 1.將字幕嵌入到影片上,並上傳到組別網站的平台上。 2.從影片字幕中整理出逐字稿,並以 .txt 格式提供連結，放置在影片下方。 3.在各嵌入的教學影片下方,以摘要方式說明該影片的教學重點。 4.進行自我評估,對教學影片的內容、呈現方式以及對觀眾的吸引力進行評估,並提出改進意見和建議。 如何統整組員子模組中的協同設計網誌 每位組員每週撰寫的協同設計網誌文章都會存放在個別的 cd2024 倉儲的 markdown 目錄中。只要修改分組倉儲中的 pelicanconf.py 檔案,使用 Pelican 設定中的 PATH 與 OUTPUT_PATH 變數,指定網誌統整目錄,就可以將所有組員在子模組中編寫的協同網誌納入分組倉儲中. 具體的設定操作是透過 pelicanconf.py 中的程式碼段,將子模組中 markdown 目錄中的 .md 檔案動態複製到分組倉儲中的 combined_directory,同時避開分組倉儲與組員子模組倉儲中 pages 目錄下的 .md 檔案。接著進行網誌轉檔,並將產生的網誌超文件存放到所設定的 blog 目錄中。完成設定後,執行網誌轉檔指令 pelican -s local_publishconf.py,利用 local_publishconf.py 的設定進行轉檔,同時將之前 pelicanconf.py 的設定也導入執行. 在這個過程中,每位組員必須在個別網誌 .md 檔案名稱前加上一串獨一無二的網誌 Slug 字串,例如：\"學號_\"，以避免檔案名稱衝突。此外,組員的 Category 欄位使用學號作為標示。這樣一來,在統整轉檔時,就不會發生相同網誌文章檔案名稱衝突的錯誤,而且可以從各分組網誌的 Categories 中找到每位組員所編寫的所有網誌內容. 利用 NX1872 協同繪製零組件 老師提供了一個 NX 套件的目錄檔案，其中包含了 NX1872 目錄。如果將這個 NX1872 目錄存入隨身碟中，可以使用下面的 start_USB_nx1872.bat 檔案來啟動 NX 軟體.(電腦輔助設計室中 C: 磁碟槽安裝了 NX1872, D: 磁碟槽則配置了 NX2206 與 NX12，需要確保在啟動 NX 軟體時選擇正確的目錄和版本)","tags":"w5","url":"./2120240321.html"},{"title":"41123230-W5老師新增影片上字幕作業","text":"老師新增影片上字幕作業 新增翻譯作業1-11頁","tags":"w5","url":"./3020240321.html"},{"title":"41123205-W5","text":"協同產品設計實習的第五週, 教學內容為先前影片整理、分組網誌的統整與 NX 零組件繪圖. 新增P65-P75頁翻譯翻譯 被組長分配到翻譯P65-P75頁並翻譯完成，再將整組成員的檔案統整後上傳","tags":"w5","url":"./41123205-W5-blog.html"},{"title":"2024 Spring 課程 w4","text":"2024 Spring 協同產品設計實習課程教導, 各分組需要明確界定任務需求與分工時序, 隨著各組協同設計流程的進行, 分組倉儲與網站的改版越發複雜, 此時可導入 SourceTree 協助各組員更清楚看到倉儲改版歷程, 與本週分組作業 分組任務 教學影片分組整理並自評: * 在影片上填上字幕, 另行上傳到可以嵌入到各分組的網站上 * 從影片字幕中整理出逐字稿, 放在影片下方, 以 .txt 連結安排 * 並在各嵌入的教學影片下方, 以摘要方式說明該影片的教學重點 Github 個人與分組倉儲的維護方式 個人的倉儲名稱為 cd2024, 而期中的分組倉儲位於 mdecd2024 帳號下, 以2a 開頭, 加上 \"-\" 之後再補上 midag + 組別, 且各組員的 cd2024 個人倉儲必須設為各分組倉儲的子模組, 目的在各組員可以自行管理並維護自己的課程倉儲, 並決定要引入分組倉儲的內容版次. * 方法一 - Replit * 方法二 - Codespaces * 方法三 - Gitpod * 方法四 - localhost","tags":"w4","url":"./3320240314.html"},{"title":"41123205-W4","text":"協同產品設計實習的第四週, 各分組需要明確界定任務需求與分工時序, 隨著各組協同設計流程的進行, 分組倉儲與網站的改版越發複雜, 此時若導入 Source Tree 協助各組員更清楚看到倉儲改版架構, 另外 Git Branch 的應用. 在小組動態新增翻譯作業 在小組動態創建翻譯作業並上傳","tags":"w4","url":"./41123205-W4-blog.html"},{"title":"2024 Spring 課程 w4","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引,在協同設計流程中,每個分組都需要明確定義任務需求和分工時序。隨著流程的進行,分組倉儲和網站的修改變得越來越複雜。為了讓各組員更清楚地看到倉儲的改版歷程以及本週的分組作業，導入 SourceTree 可以幫助團隊成員更輕鬆地管理和追蹤倉儲的修改,並更有效地協作. 分組任務 各組需要對教學影片進行整理並自我評估。這包括以下步驟： 1.在影片上添加字幕,並將其另存為可以嵌入到各組網站的格式。 2.從影片字幕中整理出逐字稿,並以 .txt 格式提供連結。 3.在各組嵌入的教學影片下方,提供影片的教學重點摘要。 這樣做可以更容易理解影片的內容，並提供方便的資源供參考。 Github 個人與分組倉儲的維護方式 各組成員的個人倉庫名稱為「cd2024」,而期中分組倉庫位於「mdecd2024」帳號下。分組倉庫的命名格式為以「2b」開頭，後接「-」,再加上「midag」以及組別號碼。每位組員的「cd2024」個人倉庫都必須被設定為相對應分組倉庫的子模組,這樣各組員便能夠獨立管理和維護自己的課程倉庫,同時可以自行決定是否要導入分組倉庫的內容版本。可使用以下四種方法之一進行操作：Replit、Codespaces、Gitpod 或本地主機（localhost）.","tags":"w4","url":"./2120240314.html"},{"title":"41123230-W4Odoo翻譯作業","text":"Odoo翻譯作業 老師增加翻譯作業 組長分配翻譯工作1-11頁","tags":"w4","url":"./3020240314.html"},{"title":"2024 Spring 課程 w3","text":"這週為英文文章翻譯,使用CHATGPT來進行文章翻譯,組長來分配每個人所負責的頁數,我所分配到頁數是21~31 子模組 如何利用 Github Codespaces 建立, cd2024 課程希望將各分組的組員個人網站, 以 submodule 的方式納入各分組倉儲與網站. 先 git submodule add 自己的倉儲空格學號, git add . , git commit -m \"add 學號 submodule\" , 最後在 git push . 期中報告 由各組員在其個人的 cd2024 倉儲中, 以 LaTeX 格式分工完成文章的英文與中文翻譯並列資料, 最後在分組網站的 Release 或 downloads 區完成 2a-midbgx_report.pdf 的製作.","tags":"w3","url":"./3320240307.html"},{"title":"41123205-W3","text":"2024 Spring 協同產品設計實習的第三週, 主要說明如何善用 Github Codespaces 與 Gitpod, 以及將組員倉儲設為分組倉儲的子模組, 同時導入 LaTeX 轉 pdf 機制, 啟動期中分組報告的製作. 建立子模組 將自己的倉儲設為小組倉儲的子模組","tags":"w3","url":"./41123205-W3-blog.html"},{"title":"2024 Spring 課程 w3","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引,這一週的主要目標是有效地利用 Github Codespaces 與 Gitpod,並且將組員的倉儲設定為分組倉儲的子模組。同時也引入 LaTeX 轉換為 PDF 的機制,為期中分組報告的製作做好準備. 子模組 使用 Github Codespaces 建立與管理您的課程倉儲。在課程倉儲中,透過以下步驟將各組員的個人網站作為 submodule 納入分組倉儲： 1.首先,使用 git submodule add 命令將組員的個人網站作為 submodule 加入到您的分組倉儲中。例如：git submodule add <組員個人網站的 URL> <組員學號> 2.然後,執行 git add . 將變更加入暫存區。 3.接著,使用 git commit -m \"add 學號 submodule\" 提交變更。 4.最後,使用 git push 將變更推送到遠端倉儲中。 這樣一來,分組倉儲就會包含各組員的個人網站作為 submodule，並且能夠在 Github Codespaces 中方便地進行管理和編輯。 有關 Codespaces 使用 考慮到 Github Codespaces 免費帳戶每月只有 120 個小時的限制,使用者可以在需要時選擇在 Github 倉儲中編輯 Markdown 目錄中的網誌文章。當需要使用 Pelican 轉換檔案或編輯 config/content.htm 以及轉換靜態網頁內容時,才啟動 Codespaces。這樣可以最大程度地優化 Codespaces 免費核心小時的使用. 期中報告 由各組員在其個人的 cd2024 倉儲中, 以 LaTeX 格式分工完成文章的英文與中文翻譯並列資料, 最後在分組網站的 Release 或 downloads 區完成 2b-midbgx_report.pdf 的製作.","tags":"w3","url":"./2120240307.html"},{"title":"41123230-W3建立2b-midag7 的子模組, 且以各組員的學號作為子模組的名稱","text":"建立2b-midag7 的子模組, 且以各組員的學號作為子模組的名稱 建立2b-midag7 的子模組, 且以各組員的學號作為子模組的名稱","tags":"w3","url":"./3020240307.html"},{"title":"2024 Spring 課程 w2","text":"2024 Spring 協同產品設計實習課程教導, 主要利用 Github Classroom 進行協同分組, 並引導學員除了 Replit, 可以利用 Github Codespaces 維護個人或分組網站內容. 利用 Github Classroom 指定分組倉儲 分組網站從 Github Classroom 執行配置, 因此該倉儲位於 mdecd2024 帳號下, 雖然各組組員具備對此分組倉儲改版的權限, 但是若將分組倉儲 import 到 Replit, 因為其倉儲擁有者為 mdecd2024, 因此無法從 Replit accoount 項下進行授權, 建立新 replit 先點 Create a Repl 再點 Import from GitHub 利用 From URL 把組別倉儲連結丟進來 (利用這個 My Repositories 是找不到的) , 選取 Python 語言, 按下 Import from GitHub 成功建立, 但是可以利用 ssh-keygen 建立 .ssh 目錄下的 id_rsa 與 id_rsa.pub, 之後除了將公鑰 (每個人都要建立一個才有權限) 送到 Github 之外, 還需要在 .ssh 目錄中建立 config, 且將倉儲 .git/config 中的 https 協定改為 SSH (git@github.com:自己的帳號/cd2024.git) , 可以在 Replit 中以 SSH 模式取得對 Github 帳號下特定倉儲的改版權限, 只不過 Replit 的免費帳號環境會不定時刪除 /home/runner/.ssh 目錄中的授權資料, 因此若要使用 Replit 維護從 Github Classroom 取得授權的分組倉儲, 必須使用程式方法配置 .ssh 中的 id_rsa 與 config 檔案. 利用 Codespaces 維護倉儲與網站 利用 init_replit 指令安裝所需 Python 模組 啟動動態 指令 1.chmod u+x init_replit 2. ./init_replit 3. Python3 main.py 靜態 指令 Python3 -m http.server Push 指令 1.git add . 2. git commit -m \" add+你要推的內容 \" 3. git push","tags":"w2","url":"./3320240229.html"},{"title":"41123205-W2","text":"2024 Spring 協同產品設計實習的第二週, 主要利用 Github Classroom 進行分組, 並且說明如何利用 Github Codespaces 維護個人與分組網站. 創立小組 自行找好組員並將組員整合到統一倉儲內","tags":"w2","url":"./41123205-W2-blog.html"},{"title":"2024 Spring 課程 w2","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引，將使用 Github Classroom 進行協同分組。除了 Replit 之外，我們還將引導學員使用 Github Codespaces 來維護個人或分組的網站內容. 利用 Github Classroom 指定分組倉儲 在使用 Github Classroom 指定分組倉庫時，倉庫位於 mdecd2024 帳戶下。雖然每個組員對該分組倉庫有修改權限，但在將分組倉庫導入 Replit 時，由於倉庫擁有者是 mdecd2024，因此無法在 Replit 帳戶下進行授權。解決這個問題的方法是創建一個新的 Replit，點擊 \"Create a Repl\"，然後選擇 \"Import from GitHub\"，使用 \"From URL\" 將組別倉庫的連結輸入。然後選擇 Python 語言，點擊 \"Import from GitHub\" 來成功建立。接下來，您可以使用 ssh-keygen 命令在 .ssh 目錄下創建 id_rsa 和 id_rsa.pub。每個人都需要建立一個並將公鑰添加到其 GitHub 帳戶中。然後，您需要在 .ssh 目錄中創建 config 文件，將倉庫的 .git/config 中的 https 協議改為 SSH（git@github.com:your_account/cd2024.git）。通過這樣的配置，您可以在 Replit 中以 SSH 模式獲取對 GitHub 帳戶下特定倉庫的修改權限。但是，由於 Replit 的免費帳戶環境會不定期刪除 /home/runner/.ssh 目錄中的授權資料，因此如果要使用 Replit 維護從 GitHub Classroom 獲取授權的分組倉庫，就需要使用程式方法來配置 .ssh 中的 id_rsa 和 config 文件. 利用 Codespaces 維護倉儲與網站 安裝所需的 Python 模組使用 init_replit 指令。 動態指令： 1.使用 chmod u+x init_replit 設置權限。 2.執行 ./init_replit。 3.啟動程式，使用 Python3 main.py。 靜態指令： 1.使用 Python3 -m http.server。 推送指令： 1.加入所有變更，使用 git add .。 2.做出提交，使用 git commit -m \"新增: 你要推送的內容\"。 3.推送至遠端儲存庫，使用 git push。","tags":"w2","url":"./2120240229.html"},{"title":"41123230-W2組長建立各組倉儲","text":"組長建立各組倉儲 組長建立各組倉儲 加入2b-midag7","tags":"w2","url":"./3020240229.html"},{"title":"41123205-W1","text":"2024 Spring 協同產品設計實習的教學主要介紹 OnShape、Coppeliasim 與 Odoo PLM 在機械設計流程中的應用. 創立倉儲 建立個人倉儲 引用網站網址連結的方法: cmsimde_site - 在文章中多次引用同一個網站連結時, 可以使用此種方法. https://github.com/mdecycu/cmsimde_site - 假如想要快速將網址套用 html 網站連結, 可以使用此種方法. cmsimde_site - 也可以使用 Markdown 的標準網站連結使用格式. # 引用 Python 程式的方法 for i in range(10): print(i, \"列出字串\") 也可以直接在 .md 檔案中使用 html 標註, 或加入 Javascript 或 Brython 程式碼. 從 1 累加到 100: 1 add to 100 將 iterable 與 iterator 相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. Filename: .py Run Output 清除輸出區 清除繪圖區 Reload 從 1 累加到 100 part2: 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block Filename: .py Run Output 清除輸出區 清除繪圖區 Reload","tags":"w1","url":"./41123205-W1-blog.html"},{"title":"2024 Spring 課程 w1","text":"2024 Spring 協同產品設計實習課程教導, 如何建立倉儲和利用 import 至 Replit進行改版、設定網誌與Odoo PLM 在機械設計流程中的應用. 建立個人課程倉儲 登入到自己的github, 連結到[https://github.com/mdecycu/cmsimde_site] (Teams也有貼) , 再利用 Template (連結點進去右上角) 作為倉儲, 打上 cd2024 為名稱, 進去後到設定裡的 pages 把 main 分支設為網頁根目錄靜態就跑出來了. 如何將倉儲 import 至 Replit 由 Replit 帳號下的設定, 底下有個 Connected Services(連線服務) 點選 Connect 後 (有連結過會出現 Disconnect ) , 讓 Github 授權給 Replit 可在 Replit 中進行改版, 改版後就有權限推回自己的網站. 內容管理系統 使用者可以自行利用 [cmsimde_site] 倉儲作為 Template, 建立自己的網站內容管理系統. import 完如何進行改版 import 完會有 Webview 跑出來這就是自己的動態網站 (由這可增加或修改內容) , 點進去後打 admin 就可增加 (也就是改版) 你所要的內容, 當你打完你要的內容後右上角有個 Convert 點一下轉為靜態 (這要點, 不然你從動態推到靜態會沒有東西) , 到 Replit 的 Git 中輸入新增的內容後 Push , 等待一下就可以在靜態看到剛剛增加的內容. 建立網誌 我們所使用的網誌系統 (Pelican) , markdown 目錄是一個原始檔 (撰寫網誌範本) , 新增完的內容轉換後會位於在 blog 下的目錄. 將 markdown 網誌轉為網誌的指令為: pelican markdown -o blog -s local_publishconf.py 表示使用了 local_publishconfig.py 設定, 其餘與 blog 有關設定檔有: pelicanconf.py (更改網誌名稱) 與 publishconf.py (增加靜態連結) 等, 在設定網誌同時要依據自己的 github 帳號對上述三個.py 去做設定動作. Odoo PLM 功能 畢竟這個程式這學期才用, 當然帳號是以學號加上 nfu.edu.tw 去建立的, 期中和期末個做一樣模擬出來, 要新增一個產品網頁 (已建立) , 依模擬產品去分配給組員做 (會收到 emlig 的訊息) 回傳至 odoo PLM 裡 以上為第一周內容","tags":"w1","url":"./3320240222.html"},{"title":"2024 Spring 課程 w1","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引，首先建立倉儲，再以Replit進行修改，接著在Replit建立網誌，記錄每周的進度，應用Odoo PLM管理機械設計流程. 創建個人課程倉儲 登入至自己的 GitHub 帳號後，點擊此連結[ https://github.com/mdecycu/cmsimde_site ]，或者在Teams中找到此連結。使用Template建立一個新倉儲，並命名為\"cd2024\"。在倉儲設定中的 pages 設定中，將 main 分支設為網頁根目錄，這樣網頁就能正常運行了. 將倉儲 import 至 Replit 在Replit帳號的設定中，找到Connected Services(連線服務)並連接GitHub，這樣就可以在Replit中進行改版，並且有權限將修改後的內容推回自己的網站. import 完如何進行改版 import完成後，動態網站就會顯示出來。點擊進入後，輸入\"admin\"就可以輕鬆增加或修改想要的內容，完成後，在右上角點擊\"Convert\"將內容轉為靜態。然後，在Replit的Git中提交新增的內容，然後Push，稍等片刻後，就可以在靜態網站上看到剛剛新增的內容. 引用網站網址連結的方法: cmsimde_site - 在文章中多次引用同一個網站連結時, 可以使用此種方法. https://github.com/mdecycu/cmsimde_site - 假如想要快速將網址套用 html 網站連結, 可以使用此種方法. cmsimde_site - 也可以使用 Markdown 的標準網站連結使用格式. # 引用 Python 程式的方法 for i in range(10): print(i, \"列出字串\") 也可以直接在 .md 檔案中使用 html 標註, 或加入 Javascript 或 Brython 程式碼. 從 1 累加到 100: 1 add to 100 將 iterable 與 iterator 相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. Filename: .py Run Output 清除輸出區 清除繪圖區 Reload 從 1 累加到 100 part2: 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block Filename: .py Run Output 清除輸出區 清除繪圖區 Reload","tags":"w1","url":"./2120240222.html"},{"title":"41123230-W1建立個人倉儲","text":"./ 建立個人倉儲 建立個人倉儲","tags":"w1","url":"./3020240222.html"},{"title":"2024 Spring 課程","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 內容管理系統 使用者可以自行利用 cmsimde_site 倉儲作為 Template, 建立自己的網站內容管理系統. 引用網站網址連結的方法: cmsimde_site - 在文章中多次引用同一個網站連結時, 可以使用此種方法. https://github.com/mdecycu/cmsimde_site - 假如想要快速將網址套用 html 網站連結, 可以使用此種方法. cmsimde_site - 也可以使用 Markdown 的標準網站連結使用格式. # 引用 Python 程式的方法 for i in range(10): print(i, \"列出字串\") 也可以直接在 .md 檔案中使用 html 標註, 或加入 Javascript 或 Brython 程式碼. 從 1 累加到 100: 1 add to 100 將 iterable 與 iterator 相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. Filename: .py Run Output 清除輸出區 清除繪圖區 Reload 從 1 累加到 100 part2: 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block Filename: .py Run Output 清除輸出區 清除繪圖區 Reload","tags":"w1","url":"./2024-Spring-w1-blog-tutorial.html"}]}