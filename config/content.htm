<h1>About</h1>
<p>網頁:<a href="https://mdecd2024.github.io/2b-midbg7/">https://mdecd2024.github.io/2b-midbg7/</a><span style="color: #0000ff;"></span></p>
<p>網誌: <a href="https://mdecd2024.github.io/2b-midbg7/blog">https://mdecd2024.github.io/2b-midbg7/blog</a></p>
<p>簡報: <a href="https://mdecd2024.github.io/2b-midbg7/reveal"><span>https://mdecd2024.github.io/2b-midbg7</span>/reveal</a></p>
<p>倉儲: <span style="color: #0000ff;"><a href="https://github.com/mdecd2024/2b-midbg7" style="color: #0000ff;">https://github.com/mdecd2024/2b-midbg7</a></span><a href="https://github.com/mdecd2024/2b-midbg7"></a></p>
<p><span style="color: #000000;">41123205:<a href="https://github.com/41123205WANG-ZE-XIANG/cd2024?fbclid=IwAR1w2I4gvvb55JEbS-_WvQ68ngKCTbRr5HU1uJvsH5vGUX7ErX5858iXlsU_aem_AbyUhV0WuNLp07kJxAXzHoRZ8YOoR-hauGOZjKJLP2qB-xtr8FXQ-73c1TVPe3uA1YFR012wmiz4RAbTSC1ZBrxS">倉儲</a>,<a href="https://41123205wang-ze-xiang.github.io/cd2024/content/index.html?fbclid=IwAR2NMp5F1XO9gOafzVARy5jk6nZqYLBHJ8tE7NSkSEXFt-GeHcjgF_hnL6U_aem_AbyYmQs-tsd_8beiYZ025ijavU66BMAFUurkxjTZrrWQSIsqMmaVXQiSuLR4Ze7Iy3iAK5qcUrrzpZccvDd6trF5">網站</a> <span style="color: #0000ff;"><a href="https://youtu.be/fMj0iAx46B8" style="color: #0000ff;">期中影片</a></span></span></p>
<p><span style="color: #000000;">41123221:<a href="https://github.com/WENG-WEI-JUN/cd2024">倉儲</a>,<a href="https://weng-wei-jun.github.io/cd2024/content/index.html">網站</a> <a href="https://www.youtube.com/watch?v=_5JEvOCj_AU">期中影片</a></span></p>
<p><span style="color: #000000;">41123230:<a href="https://github.com/41123230GUANSEN/cd2024">倉儲</a>,<a href="https://41123230guansen.github.io/cd2024/content/index.html">網站</a> <span style="color: #0000ff;"><a href="https://www.youtube.com/watch?v=LO3szFD458A" style="color: #0000ff;">期中影片</a></span></span></p>
<p><span style="color: #000000;">41123233:<a href="https://github.com/zeng-wei-zhi/cd2024">倉儲</a>,<a href="https://zeng-wei-zhi.github.io/cd2024/content/W3.html">網站</a> <a href="https://www.youtube.com/watch?v=kZs1Ih3gBpY">期中影片</a></span></p>
<p><span style="color: #000000;">41123244:<a href="https://github.com/halo2356141/cd2024?fbclid=IwAR0dILRHhZ20XxgBI48-DNw3MbBhjPddVb0QSAV16bNnageAE13dxBQ94I0_aem_AbyYssj0KwPEGvHtQbW37wHCooxHbZhre5cwRnNWalbPfZclQXyA-lS2ezwehG_OkrxABz5Jdp6CObVZn79h5c5J">倉儲</a>,<a href="https://halo2356141.github.io/cd2024/content/index.html?fbclid=IwAR1UCbGODDH3jNrw5BvvfW4ldDzobbRlCBVcgmkS7H-8_TYbNx33RK0pl-8_aem_Abwlo9WR5na4UQiiDRpfeuJB30YppSLdLfVkklr6-HKpZJjyYIoCDN1CS6qarIBG6aqs8qLcciGrDkYVW22mgxYQ">網站</a> <span style="color: #0000ff;"><a href="https://youtu.be/FpY687y9yBA" style="color: #0000ff;">期中影片</a></span></span></p>
<p><span style="color: #000000;">41123245:<a href="https://github.com/Xuxia1118/cd2024">倉儲</a>,<a href="https://xuxia1118.github.io/cd2024/content/index.html">網站</a> <a href="https://youtu.be/uJwPq8adzOU">期中影片</a></span></p>
<p><span style="color: #000000;">41123247:<a href="https://github.com/tsai1201/cd2024?fbclid=IwAR1_-T6oBLmczIf3Kt7BLXBJRr4N_7FzmYF5dWzkCVieUFrv6LRSrGjiElY_aem_AbxBDl85bE9KOqoxRrNC21dCxBXCJFx52ldU0XH3g-AYKdz7Dpoi3QS9SiMsSD2nXYrQp4E7DSkpdRwhFCeikz1J">倉儲</a>,<a href="https://tsai1201.github.io/cd2024/content/index.html?fbclid=IwAR1leOe1dcdt7dqNAX9zTRcj0WCMhfT_qNK6G9UDaD5Fwrsm0Q3NjN45Y_Q_aem_AbzOmYYlFfVVFVrcEl4fipZW9o_ZgqW7Vxt3j1e9ZHbWlf3fiI_Pe4D5SEeBDCLxVN_IgdOXyDIfHB-wmb1WZQfh">網站</a> <span>期中影片</span></span></p>
<p><span style="color: #000000;">41123248:<a href="https://github.com/BA930420/cd2024?fbclid=IwAR1sld0w5DLfmZ6giqF0TBpZHJiTu1Lmg07VQzbXjP7TJuSlCEaON0QNxeU_aem_Abwq_Uf_IknzhrFq9yVsXSR1ZIvoJDNlwA5TNe_ib7SSvzJKiLszv7hxuiU734YE7KAYgeIb36fC7GBIQUz5bmL9">倉儲</a>,<a href="https://ba930420.github.io/cd2024/content/index.html?fbclid=IwAR2NMp5F1XO9gOafzVARy5jk6nZqYLBHJ8tE7NSkSEXFt-GeHcjgF_hnL6U_aem_AbyYmQs-tsd_8beiYZ025ijavU66BMAFUurkxjTZrrWQSIsqMmaVXQiSuLR4Ze7Iy3iAK5qcUrrzpZccvDd6trF5">網站</a> <span>期中影片</span></span></p>
<h1>W3翻譯任務</h1>
<p>老師要求組長分配組員翻譯<span style="color: #0000ff;"><a href="/downloads/tesi.pdf" style="color: #0000ff;">此tesi</a></span>文章</p>
<p>41123221-翁帷竣-<span style="color: #0000ff;"><a href="/downloads/41123221-翁帷竣-P1~P9.pdf" style="color: #0000ff;">目錄</a></span></p>
<p>41123230-陳冠森<span style="color: #0000ff;">-<a href="/downloads/翻譯1-11.pdf" style="color: #0000ff;">P10-20</a></span></p>
<p><span>41123233-曾韋智-<span style="color: #0000ff;"><a href="/downloads/P21-P31.pdf" style="color: #0000ff;">P21-P31</a></span></span></p>
<p>41123244-劉軒銘-<span style="color: #0000ff;"><a href="/downloads/P32-42.pdf" style="color: #0000ff;">P32-P42</a></span></p>
<p>41123247-蔡明翰-<span style="color: #0000ff;"><a href="/downloads/41123247 蔡明翰 P43-P53.pdf" style="color: #0000ff;">P43-53</a></span></p>
<p>41123245-劉騰元-<span style="color: #0000ff;"><a href="/downloads/P54-P64.pdf" style="color: #0000ff;">P54-64</a></span></p>
<p>41123205-王則翔-<span style="color: #0000ff;"><a href="/downloads/P65-75.pdf" style="color: #0000ff;">P65-P75</a></span></p>
<p>41123248-蔡緯泰-<span style="color: #0000ff;"><a href="/downloads/41123248 蔡緯泰 76-87.pdf" style="color: #0000ff;">P76-87</a></span></p>
<p><span style="color: #0000ff;"><a href="/downloads/odoo統整.pdf" style="color: #0000ff;">整份統合</a><span style="color: #000000;">完成</span></span></p>
<h1>W5分組任務</h1>
<ul>
<li>影片填上字幕</li>
<li>上傳逐字稿.txt</li>
<li>心得摘要</li>
</ul>
<h2>41123205</h2>
<p><span>自評分數:65</span></p>
<p><span style="color: #0000ff;"><span style="color: #000000;">1.<span>建立個人課程倉儲與網站</span></span></span></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/kIXD6Ygjxvo" width="560"></iframe></p>
<p><span style="color: #0000ff;"><a href="/downloads/影片1翻譯.txt" style="color: #0000ff;">建立個人課程倉儲與網站影片之逐字稿</a></span></p>
<p>摘要:先進入mde.te網站的CD2024 &gt;&gt; 利用team code(p0961sy)加入teams團隊 &gt;&gt; 先登入github&gt;&gt;再利用https://github.com/mdecycu/cmsimde_site此連結進到cd2024的倉儲template來create一個新的倉儲<br/>&gt;&gt; 名稱打cd2024 &gt;&gt; 按create &gt;&gt; 點settings &gt;&gt; 點pages &gt;&gt; 將none改為main &gt;&gt; 點save</p>
<p>心得:這部影片裡的內容應該是淺顯易懂的，所以應該很容易就做出來了。</p>
<p><span style="color: #0000ff;"><span style="color: #000000;"><span> </span></span></span></p>
<p><span style="color: #0000ff;"><span style="color: #000000;"><span></span></span></span></p>
<p><span style="color: #0000ff;"><span style="color: #000000;">13.<span>利用 Gitpod 與個人 token 取得分組倉儲改版權限</span></span></span></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/gDs7LZ0A47o" width="560"></iframe></p>
<p><span style="color: #0000ff;"><a href="/downloads/影片13翻譯.txt" style="color: #0000ff;">利用 Gitpod 與個人 token 取得分組倉儲改版權限影片之逐字稿</a></span></p>
<p>摘要:先到gitpod &gt;&gt; 將token存在TERMINAL之下 &gt;&gt; 打cd .git和cat config &gt;&gt; 要編輯要先更換目錄到git之下 &gt;&gt; Vi config &gt;&gt; 是利用KJHL控制程式編碼位置 &gt;&gt; 不須使用後要到gitpod關掉才不會浪費時數</p>
<p>心得:gitpod這裡我看了很久但還是不知道怎麼進去的，之後再去詢問同學了。</p>
<h2>41123221</h2>
<p><span>自評分數:65</span></p>
<p><span style="color: #0000ff;"><span style="color: #000000;"><span>2.如何從 Replit Account 設定 Connect 連結到 Github</span></span></span></p>
<p></p>
<p><span style="color: #0000ff;"><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/0bAJne3Lug4" width="560"></iframe></span></p>
<p><span style="color: #0000ff;">逐字稿</span></p>
<p><span style="color: #000000;">摘要:先到replit &gt;&gt; 點選Account &gt;&gt; Connect Github &gt;&gt; 到 Github Settings &gt;&gt; Integrations &gt;&gt; Applications&gt;&gt; 檢查是否連結成功</span></p>
<p><span style="color: #000000;"><span>心得:影片內容簡潔易懂，跟著做就可以將帳號連結成功。</span></span></p>
<h2>41123230</h2>
<p>自評分數:65</p>
<p><span style="color: #0000ff;"><span style="color: #000000;"><span>3.cd2024 2b 3 如何設定 Github 帳號的雙重認證 3 (字幕)</span></span></span></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/VDv6Mshqgt8" width="560"></iframe></p>
<p><a href="/downloads/cd2024 2b 3 如何設定 Github 帳號的雙重認證 3 (字幕).txt">逐字稿</a></p>
<p>摘要:老師這次主要是教我們如何設定雙重認證，通過下載<span>moble github</span>手機來驗證登錄的人是否是本人</p>
<p>心得:老師拍的影片非常簡潔明瞭的演示如何設定雙重認證，我也成功設定完成</p>
<p>14.cd2024 2b w5 指定影片加註任務 統整網誌以及配置 NX 可攜與 PC 執行規劃(字幕)</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/7nUQ-SlqmhU" width="560"></iframe></p>
<p><a href="/downloads/cd2024 2b w5 指定影片加註任務 統整網誌以及配置 NX 可攜與 PC 執行規劃(字幕).txt">逐字稿</a></p>
<p>摘要:老師這次分配給我們的任務是將前面已發佈的教學影片，將其填上字幕、整理出逐字稿放在影片下方並在影片下方整理出影片重點</p>
<p>心得:老師這次的任務說明也清楚，我們這組也成功完成任務</p>
<h2>41123233</h2>
<p>自評分數:65</p>
<p>第五個圖:<a href="https://drive.google.com/file/d/111XF_-WQ4fueM25CdNIo5dkH-2DYYZMz/view?usp=drive_link">錄影</a>、<a href="https://drive.google.com/file/d/1krtcwtVUCVZ058OqE8-oHcrM_L7F0H8w/view?usp=drive_link">零件</a></p>
<p><span style="color: #0000ff;"><span style="color: #000000;"><span>4.說明如何將倉儲 import 至 Replit 改版後推回 github</span></span></span></p>
<p><span style="color: #0000ff;"><span style="color: #000000;"><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/cqwZp17qOv8" width="560"></iframe></span></span></span></p>
<p><span style="color: #0000ff;"><a href="/downloads/4..txt" style="color: #0000ff;">逐字稿</a></span></p>
<p><span style="color: #0000ff;"><span style="color: #000000;"><span>9.如何利用 Gidpod 維護分組網站</span></span></span></p>
<p><span style="color: #0000ff;"><span style="color: #000000;"><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/kk_5DmBgf-A" width="560"></iframe></span></span></span></p>
<p><span style="color: #0000ff;"><a href="/downloads/9..txt" style="color: #0000ff;">逐字稿</a></span></p>
<p><span style="color: #0000ff;"> </span></p>
<h2>41123244</h2>
<p>自評分數:65</p>
<p>5.</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/ZHhAqdi-248" width="560"></iframe></p>
<p><span>摘要:組長建立 Team 並設定分組倉儲</span></p>
<p><a href="/downloads/5.txt">逐字稿</a>.</p>
<p><span style="color: #000000;">10.</span></p>
<p><span style="color: #000000;"><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/KCNOzADSs18" width="560"></iframe></span></p>
<p><span style="color: #000000;"><span>摘要:使用 gitpod 與 localhost 維護個人倉儲</span></span></p>
<p><a href="/downloads/10.txt">逐字稿</a></p>
<p><br/><span style="color: #0000ff;"></span></p>
<h2>41123245</h2>
<p>6.</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/iaMfrOyAnHQ" width="560"></iframe></p>
<p><a href="/downloads/6.txt">逐字稿</a></p>
<h2>41123247</h2>
<p><span>自評分數:65</span></p>
<p><span style="color: #0000ff;"><span style="color: #000000;"><span>7.利用 codespaces 維護分組網站</span></span></span></p>
<p><span style="color: #0000ff;"><span style="color: #000000;"><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/S-5QAeogShM" width="560"></iframe></span></span></span></p>
<p><span style="color: #0000ff;"><a href="/downloads/07逐字稿.txt" style="color: #0000ff;">逐字稿</a></span></p>
<p><span style="color: #0000ff;"><span style="color: #000000;"><span>11.以第六組為例, 利用 Codespaces 改版</span></span></span></p>
<p><span style="color: #0000ff;"><span style="color: #000000;"><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/v9EAEM2n8XA" width="560"></iframe></span></span></span></p>
<p><span style="color: #0000ff;"><a href="/downloads/11逐字稿.txt" style="color: #0000ff;">逐字稿</a></span></p>
<p><span style="color: #0000ff;"> </span></p>
<p><span style="color: #0000ff;"></span></p>
<h2>41123248</h2>
<p>8.<a href="/downloads/8.txt">逐字稿</a></p>
<p>12.<a href="/downloads/12.txt">逐字稿</a></p>
<h1>cmsimde</h1>
<p><span style="background-color: #ccffcc;">SMap</span> - SiteMap - 依照階次列出網站的所有頁面.</p>
<p><span style="background-color: #ccffcc;">EditA</span> - Edit All page - 將所有頁面放入編輯模式中, 主要用來處理頁面搬遷, 刪除或決定衝突頁面內容版本.</p>
<p><span style="background-color: #ccffcc;">Edit</span> - Edit page - 先選擇要編輯的單一頁面後, 再點選 Edit, 即可進入單一頁面的編輯模式.</p>
<p><span style="background-color: #ccffcc;">Config</span> - Configure Site - 編輯頁面標題與管理者密碼.</p>
<p><span style="background-color: #ccffcc;">Search</span> - 動態頁面內容的關鍵字搜尋.</p>
<p><span style="background-color: #ccffcc;">IUpload</span> - Image file Upload - 圖檔的上傳功能, 可以上傳 jpg, png 與 gif 檔案, 其中若在手機上傳圖檔, 系統會自動將圖片檔案縮小為 800x800 大小.</p>
<p><span style="background-color: #ccffcc;">IList</span> - Image file List - 列出可以直接在頁面編輯模式中引用的圖片檔案.</p>
<p><span style="background-color: #ccffcc;">FUpload</span> - File Upload - 一般檔案的上傳功能, 目前可以上傳的檔案副檔名包括 'jpg', 'png', 'gif', '7z', 'pdf', 'zip', 'ttt', 'stl', 'txt', 'html', 'mp4' 等, 使用者可以自行修改.</p>
<p><span style="background-color: #ccffcc;">FList</span> - File List - 列出可以直接在頁面編輯模式中引用的上傳檔案.</p>
<p><span style="background-color: #ccffcc;">Logout</span> - 登出頁面編輯模式.</p>
<p><span style="background-color: #ccffcc;">Convert</span> - 將動態網站中位於 config/content.htm 檔案, 透過分頁設定轉為 content 目錄中的靜態網頁.</p>
<p><span style="background-color: #ccffcc;">acp</span> - git add, git commit 與 git push, 通常只有在 localhost 或自架主機上利用網頁表單協助將倉儲改版內容推向 Github 倉儲.</p>
<p><span style="background-color: #ccffcc;">SStatic</span> - Start Static Site - 利用 Python 啟動網站伺服功能, 可以讓使用者檢查轉檔後的靜態網站內容.</p>
<p><span style="background-color: #ccffcc;">RStatic</span> - Replit Static Site URL - 僅用於 Replit 模式, 當使用者按下 SStatic 後, 可以按下 RStatic 進入當下尚未推向 Github Pages 的靜態網站.</p>
<p><span style="background-color: #ccffcc;">80</span> - 由 init.py 中 static_port 所決定的連結字串, 一般不使用 80, 只有在 Replit 中為了與動態網站共用 port, 才特別設為 80.</p>
<p></p>
<h1>Replit</h1>
<p><a href="https://replit.com">https://replit.com</a></p>
<p>利用 init_replit 指令安裝所需 Python 模組<br/><br/>chmod u+x init_replit<br/><br/>./init_replit</p>
<p dir="auto">On Replit:</p>
<p dir="auto">.replit: python3 main.py</p>
<p dir="auto">chmod u+x cms init_replit</p>
<p dir="auto">./init_replit</p>
<p dir="auto" style="padding-left: 30px;">for cmsimde_site (not needed): git submodule update --init --recursive</p>
<p dir="auto" style="padding-left: 30px;">for cmsimde: pip install flask flask_cors bs4 lxml pelican markdown gevent</p>
<p dir="auto">password generator: <a href="https://mde.tw/cmsite/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/b92b16621dd0246c352cf13d6463b333/raw/0bfa669750aba3abe48554509bbd43d65b6e5c82/hashlib_password_generator.py">https://mde.tw/cmsite/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/b92b16621dd0246c352cf13d6463b333/raw/0bfa669750aba3abe48554509bbd43d65b6e5c82/hashlib_password_generator.py</a> </p>
<p dir="auto"></p>
<p dir="auto">for IPv6 only Ubuntu:<br/><br/>.ssh 目錄中的 config, 將 SSH session 名稱設為 github.com:<br/><br/>Host github.com<br/>User git<br/>Hostname github.com<br/>ProxyCommand /usr/bin/ncat --proxy p4.cycu.org:3128 --proxy-type http %h %p<br/><br/>for Replit:<br/><br/>.ssh 目錄中的 config, 將 SSH session 名稱設為 github.com:<br/><br/>Host github.com<br/>User git<br/>Hostname github.co<br/>#since Replit works for IPv4, therefore no ProxyCommand setting needed<br/>#ProxyCommand /usr/bin/ncat --proxy p4.cycu.org:3128 --proxy-type http %h %p</p>
<p></p>
<p></p>
<h1>Brython</h1>
<p><a href="https://en.wikipedia.org/wiki/Python_(programming_language)">https://en.wikipedia.org/wiki/Python_(programming_language)</a></p>
<h4>Examples:</h4>
<p style="padding-left: 30px;"><a href="https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d">https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d</a></p>
<p style="padding-left: 30px;"><a href="https://www.geeksforgeeks.org/python-programming-examples/">https://www.geeksforgeeks.org/python-programming-examples/</a></p>
<p style="padding-left: 30px;"><a href="https://www.programiz.com/python-programming/examples">https://www.programiz.com/python-programming/examples</a></p>
<p style="padding-left: 30px;"><a href="https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/">https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/</a></p>
<h4>Python Tutorial:</h4>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/">https://docs.python.org/3/tutorial/</a></p>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/introduction.html">An informal introduction to Python</a></p>
<h4>Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍)</h4>
<h4>Variables (<a href="https://github.com/python/cpython/blob/3.11/Lib/keyword.py">Python Keywords</a>)</h4>
<h4>Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解)</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#numbers">Numbers</a> (整數 int(), 浮點數 float())</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#strings">Strings</a> (字串)</h4>
<h4>print (Python 內建函式, <a href="https://docs.python.org/3/library/functions.html#print">print()</a> 函式)</h4>
<p><a href="https://docs.python.org/3/tutorial/controlflow.html">Python control flow tools</a></p>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements">for</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements">if</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#the-range-function">range</a></h4>
<h4>open</h4>
<h4>read</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#lists">lists</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences">tuples</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries">dictionaries</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions">functions</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/errors.html#exceptions">try ... except</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops">break</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#pass-statements">pass</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/classes.html?highlight=classes">classes</a></h4>
<p>這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 (<a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件).</p>
<p><a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用.</p>
<p>亦即將所有對應的 html 也使用 Brython 產生, 然後寫為 <a href="https://docs.python.org/3/tutorial/classes.html">class</a> 後, 在範例導入時透過 <a href="https://docs.python.org/3/tutorial/classes.html#instance-objects">instance</a> 引用.</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
&lt;/script&gt;</pre>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<p>將 iterable 與 iterator <a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438">相關說明</a>, 利用 Brython 與 Ace Editor 整理在這個頁面.</p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button><button id="threejsblock">Rotating Block</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>